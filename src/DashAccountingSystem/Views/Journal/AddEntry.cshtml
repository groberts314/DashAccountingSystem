@using DashAccountingSystem.Extensions
@using DashAccountingSystem.Models
@model JournalEntryBaseViewModel

@{
    ViewData["Title"] = "Add Journal Entry";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var tenant = ViewBag.Tenant;

    string AccountWidgetProps()
    {
        var accountsList = ViewBag.AccountList as CategorizedAccountsViewModel;
        var transformedAccountsList = accountsList.AccountCategories.Select(categoryEntry => new
        {
            category = categoryEntry.Key.GetDisplayName(),
            accounts = categoryEntry.Value.Select(acct => new
            {
                id = acct.Id,
                name = acct.DisplayName
            })
        });

        var combinedProps = new
        {
            accounts = Model.Accounts,
            accountsList = transformedAccountsList,
            assetTypes = ViewBag.AssetTypes
        };

        return combinedProps.SerializeProps();
    }
}

<partial name="_TenantMastheadAndNavPartial" />

@{
    if (ViewBag.PostBack && ViewBag.SuccessfulSave)
    {
        var detailedModel = Model as JournalEntryDetailedViewModel;
        var isPosted = detailedModel.PostDate.HasValue;

        var successHeadline = isPosted
            ? $"Entry for Transaction # {detailedModel.EntryId} successfully saved and posted to the journal"
            : $"Entry for Transaction # {detailedModel.EntryId} successfully saved to the journal and is pending";

        <div class="alert alert-success" role="alert">
            <strong>@successHeadline</strong>
        </div>
        <div style="margin: 22px auto">
            <a class="btn btn-success"
               asp-route="addJournalEntry"
               asp-route-tenantid="@tenant.Id"
               role="button"
               style="margin-right: 22px"
            >
                Add Another Entry
            </a>
            <a class="btn btn-primary"
               asp-route="journalIndex"
               asp-route-tenantid="@tenant.Id"
               role="button"
            >
                Back to Journal
            </a>
        </div>
        <partial name="_JournalEntryMetadataPartial" for="@detailedModel" />
        <partial name="_JournalEntryAccountsPartial" for=" @detailedModel" />
    }
    else
    {
        <form asp-route="addJournalEntryPost" asp-route-tenantid="@tenant.Id" id="add-entry-form">
            <div class="row">
                <div class="col-md-12">
                    <div asp-validation-summary="All" class="text-danger"></div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 col-md-2 pull-right" style="text-align: right;">
                    <input class="btn btn-success form-control" type="submit" value="Submit" id="submit-button">
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-md-3">
                    <div class="form-group">
                        <label asp-for="EntryDate">Entry Date</label>
                        <input asp-for="EntryDate" class="form-control" />
                        <span asp-validation-for="EntryDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6 col-md-3">
                    <div class="form-group">
                        <label asp-for="PostDate">Post Date</label>
                        <input asp-for="PostDate" class="form-control" />
                        <span asp-validation-for="PostDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-6 col-md-3">
                    <div class="form-group">
                        <label asp-for="CheckNumber">Check # Reference</label>
                        <input asp-for="CheckNumber" class="form-control" />
                        <span asp-validation-for="CheckNumber" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Description">Transaction Description</label>
                        <textarea asp-for="Description" class="form-control" maxlength="2048"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Note">Additional Note</label>
                        <textarea asp-for="Note" class="form-control"></textarea>
                    </div>
                </div>
            </div>
            <div id="journal-entry-accounts" data-props="@AccountWidgetProps()" style="margin-top: 22px"></div>
        </form>
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @*<script src="~/js/react.min.js"></script>*@
    @*<script src="~/js/react-dom.min.js"></script>*@
    <script src="~/js/react.js"></script>
    <script src="~/js/react-dom.js"></script>
    <script src="~/js/common.js" asp-append-version="true"></script>
    <script src="~/js/components.js" asp-append-version="true"></script>
    <script type="text/javascript">
        // Load the journal entry accounts widget
        common.mountComponent(components.JournalEntryAccounts, "#journal-entry-accounts");

        // Setup default validation state (done this way to share with the React widget)
        window.dash = window.dash || {};
        window.dash.journalEntry = {
            error: 'Journal Entry does not have any accounts',
            hasSufficientAccounts: false,
            isBalanced: true
        };

        // Validate journal entry accounts before submitting
        (function ($) {
            $(document).ready(function () {
                var $validationSummaryList = $('.validation-summary-valid ul');
                var $form = $('#add-entry-form');
                var formValidator = $form.data('validator');

                if (formValidator) {
                    var settings = formValidator.settings;

                    settings.submitHandler = function (form) {
                        // Once top-level validation has past but before we submit the form, check the accounts validation state
                        var validationState = window.dash.journalEntry;

                        if (!validationState.hasSufficientAccounts ||
                            !validationState.isBalanced) {
                            $validationSummaryList
                                .empty()
                                .append('<li>' + validationState.error + '</li>');
                            return;
                        }

                        form.submit();
                    };

                    settings.highlight = function (element) {
                        console.log('Highlighting...');
                        $(element).closest('.form-group').addClass('has-error');
                    };

                    settings.unhighlight = function (element) {
                        $(element).closest('.form-group').removeClass('has-error');
                    };
                }
            });
        }(jQuery));
    </script>
}

